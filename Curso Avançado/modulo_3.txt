Revertendo Commits no Master com Revert

	https://git-scm.com/docs/git-revert

    Como podemos reverter uma alteração executada na master:

    git checkout master

    git add . 

    git commit -m "Codigo com falha"

    git push origin master

    git log

        Pega o ID do commit que queremos reverter

    git revert <codigo do commit>
	
	Após irá abrir uma janela dizendo quais arquivos serão revertidos com esta operação

	O revert não apaga o historico de commit ou seja, 
    ele é o recomendado a ser utilizado devido a rastreabilidade dos commits, recomendado principalmente
    para branch master.

Revertendo com Reset

	https://git-scm.com/docs/git-reset

	git reset --hard/--soft

	--hard 

		Retorna para este commit e apaga tudo que foi feito depois;

	--soft

		Retorna as alterações para área de stagged, dando a possibilidade de correção do problema;

	Vantagens do Reset

		Serve para evitar commits sujos, recomendado para branches separados, ou que você esteja trabalhando sozinho, não recomendado para o master;

		Caso você tenha a alteração que o reset tenha revertido já esteja na origin/master, será necessário que você faça um --force
		forcando o remote a atualizar seus historicos de commits; 

Editando commits com amend

	https://help.github.com/articles/changing-a-commit-message/

	Fornece a possibilidade de alterar commits locais, como mensagens, arquivos, etc;

	Não recomendado para MASTER;

	Após o commit ter sido realizado localmente, basta executar:
	
	git commit --amend

		Aqui você podera executar as modificações desejadas no ultimo commit realizado.

